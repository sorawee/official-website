<?xml version="1.0" encoding="utf-8"?>
<feed xml:lang="en-us" xmlns="http://www.w3.org/2005/Atom"><title>Sorawee Porncharoenwase</title><link rel="self" href="https://homes.cs.washington.edu/~sorawee/"/><generator uri="http://pollenpub.com/">Pollen (custom feed)</generator><id>https://homes.cs.washington.edu/~sorawee/</id><updated>2018-12-11T10:08:00-08:00</updated><author><name>Sorawee Porncharoenwase</name><email>&#115;&#111;&#114;&#97;&#119;&#101;&#101;&#64;&#99;&#115;&#46;&#119;&#97;&#115;&#104;&#105;&#110;&#103;&#116;&#111;&#110;&#46;&#101;&#100;&#117;</email></author><entry><author><name>Sorawee Porncharoenwase</name></author><published>2017-10-05T00:00:00-07:00</published><updated>2018-12-09T00:00:00-08:00</updated><title type="text">Deriving the Y Combinator</title><link rel="alternate" href="https://homes.cs.washington.edu/~sorawee/blog/2017/10-05-deriving-Y.poly.pm"/><id>https://homes.cs.washington.edu/~sorawee/blog/2017/10-05-deriving-Y.poly.pm</id><summary type="html"><![CDATA[<p>The Y combinator is a somewhat magical aspect of the untyped lambda calculus. Many people presented explanations of this magic, but I found them somewhat unsatisfactory. Some explanations show the combinator in the beginning and then simply demonstrate that the given combinator is correct. Some other explanations contain lines like “Why don’t we try passing it to itself? And look, this turns out to be exactly what we want!” These explanations don’t give an intuition for how one could <em>constructively</em> obtain the combinator. <i>What on earth makes you think that passing it to itself is a good idea?</i> As such, this post, intended for those who know the Y combinator already but do not satisfy with the existing explanations, attempts to explain how one could constructively derive the Y combinator.</p><p></p><p><a href="https://homes.cs.washington.edu/~sorawee/blog/2017/10-05-deriving-Y.poly.pm">Click here to read <i>Deriving the Y Combinator</i></a></p>]]></summary></entry><entry><author><name>Sorawee Porncharoenwase</name></author><published>2017-01-03T00:00:00-08:00</published><updated>2018-12-06T00:00:00-08:00</updated><title type="text">Rainbow in Pygments</title><link rel="alternate" href="https://homes.cs.washington.edu/~sorawee/blog/2017/01-03-rainbow-parens.poly.pm"/><id>https://homes.cs.washington.edu/~sorawee/blog/2017/01-03-rainbow-parens.poly.pm</id><summary type="html"><![CDATA[<p>I tried to learn <a href="https://en.wikipedia.org/wiki/Continuation">continuations</a> yesterday. This led me to a <a href="http://community.schemewiki.org/?p=composable-continuations-tutorial">tutorial on composable continuations</a> in schemewiki.org. It explains things nicely, but what really intrigues me is something completely different: <a href="https://www.emacswiki.org/emacs/RainbowDelimiters">rainbow parentheses</a> on mouse hovering.</p><p><img src="https://homes.cs.washington.edu/~sorawee/blog/2017/01-03-rainbow-parens.poly.pm/../img/01-paren-highlight.png" class="block-image " style="width: 60%"/></p><p>This post, of course, explains how I managed to get it on my website!</p><div class="highlight"><table class="sourcetable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="source"><pre class=" racket"><span></span><span class="paren"><span class="p">(</span><span class="k"><a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))">define</a></span> <span class="n">x</span> <span class="paren"><span class="p">(</span><span class="nb"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))">+</a></span> <span class="mi">1</span> <span class="paren"><span class="p">(</span><span class="nb"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))">+</a></span> <span class="mi">3</span> <span class="paren"><span class="p">(</span><span class="nb"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))">+</a></span> <span class="mi">2</span> <span class="mi">4</span><span class="p">)</span></span> <span class="paren"><span class="p">(</span><span class="nb"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))">+</a></span> <span class="mi">9</span> <span class="mi">9</span><span class="p">)</span></span><span class="p">)</span></span><span class="p">)</span></span><span class="p">)</span></span>
</pre></div></td></tr></tbody></table></div><p></p><p><a href="https://homes.cs.washington.edu/~sorawee/blog/2017/01-03-rainbow-parens.poly.pm">Click here to read <i>Rainbow in Pygments</i></a></p>]]></summary></entry></feed>